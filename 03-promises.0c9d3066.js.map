{"mappings":"AA2BA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAc,C,SAAET,E,MAAUC,GAC5BK,EACFH,EAAQM,GAERL,EAAOK,EAAY,GAEpBR,EAAM,G,CArCbS,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAEC,iBAEF,MAAMC,EAAeF,EAAEG,OAAOC,SAAgB,MACxCC,EAAcL,EAAEG,OAAOC,SAAe,KACtCE,EAAgBN,EAAEG,OAAOC,SAAiB,OAE1CG,EAAQC,OAAON,EAAaO,OAC5BC,EAAOF,OAAOH,EAAYI,OAC1BE,EAASH,OAAOF,EAAcG,OAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/B1B,EAAc0B,EAAI,EADGL,EAAQG,EAAOE,GAEjCC,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MAEhB0B,QAAOC,IAAI,uBAAqB5B,QAAiBC,MAAU,IAG7D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAEjB0B,QAAOC,IAAI,sBAAoB5B,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["document.querySelector('.form').addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const delayElement = e.target.elements['delay'];\n  const stepElement = e.target.elements['step'];\n  const amountElement = e.target.elements['amount'];\n\n  const delay = Number(delayElement.value);\n  const step = Number(stepElement.value);\n  const amount = Number(amountElement.value);\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = delay + step * i;\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        // Folosește Notiflix sau console.log aici:\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // Folosește Notiflix sau console.log aici:\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        // Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const returnValue = { position, delay };\n      if (shouldResolve) {\n        resolve(returnValue);\n      } else {\n        reject(returnValue);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","returnValue","document","querySelector","addEventListener","e","preventDefault","delayElement","target","elements","stepElement","amountElement","delay1","Number","value","step","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.0c9d3066.js.map"}